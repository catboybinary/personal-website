---
import background from '../assets/background.svg';
import Social from "./Social.astro";

let birthDate = new Date(Date.UTC(2006, 4, 4, 21, 0, 0));
let now: Date = new Date();
let ageInMs = now.getTime() - birthDate.getTime();
let ageInYears = ageInMs / (1000 * 60 * 60 * 24 * 365.25);
let age = ageInYears.toFixed(9);
---

<div id="container">
    <img id="background" src={background.src} alt="" fetchpriority="high"/>
    <main>
        <div id="hero">
            <h2>hi, i'm <code>
                <pre>catboybinary</pre>
            </code></h2>
            <h2>i am <code>
                <pre id="age">{age}</pre>
            </code> years old
            </h2>
            <h2>my pronouns are <code>
                <pre class="pronouns"></pre>
            </code></h2>
            <h2>occupations:
                <code><pre>java programmer</pre></code><code><pre>game developer</pre></code> :3
            </h2>
            <h2>you can find my projects at the links below</h2>

            <div id="links">
                <Social link="https://github.com/catboybinary" colorA="#ABABAB" colorB="#777777">github</Social>
                <Social link="https://www.curseforge.com/members/catboybinary/projects" colorA="#fd8b38" colorB="#cc2e17">curseforge</Social>
                <Social link="https://modrinth.com/user/catboybinary" colorA="#1ced89" colorB="#14cb47">modrinth</Social>
                <Social link="https://t.me/catboybinary" colorA="#25c6f0" colorB="#1d83cc">telegram</Social>
            </div>
        </div>
    </main>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const pronounsList = ["she/her", "he/him", "they/them"];
            const pronounsElement = document.querySelector(".pronouns") as HTMLElement;
            const animTime : number = 1.75

            let index: number = 0;
            let birthDate = new Date(Date.UTC(2006, 4, 4, 21, 0, 0));

            function updateLiveAge() {
                let now: Date = new Date();
                let ageInMs = now.getTime() - birthDate.getTime();
                let ageInYears = ageInMs / (1000 * 60 * 60 * 24 * 365.25);
                let ageElement: HTMLElement = document.getElementById("age") as HTMLElement;
                ageElement.textContent = ageInYears.toFixed(9);
            }

            function updatePronoun() {
                const pronounDiv = document.createElement("div");
                pronounDiv.style.webkitTextFillColor = "#e0377b";
                pronounDiv.style.animation = animTime+"s linear slideUp";
                pronounDiv.textContent = pronounsList[index] + "\n"
                    + pronounsList[(index + 1) % pronounsList.length] + "\n";

                if (pronounsElement.firstChild) {
                    pronounsElement.removeChild(pronounsElement.firstChild);
                }
                pronounsElement.appendChild(pronounDiv);

                index = (index + 1) % pronounsList.length; // Cycle through pronouns
            }

            // Update every 2 seconds (same as CSS animation duration)
            setInterval(updatePronoun, animTime*1000);
            setInterval(updateLiveAge, 1);

            updatePronoun(); // Run initially
            updateLiveAge();
        });
    </script>
</div>

<style>
    #background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        filter: blur(120px);
        user-select: none;
        pointer-events: none;
        opacity: 100%;
    }

    #container {
        height: 100%;
        background: #0b0a18;
    }

    .pronouns {
        height: 1em; /* Adjust height to match a single pronoun */
        width: 5em;;
        justify-content: center;
        overflow: hidden;
        position: relative;
    }

    @keyframes slideUp {
        0% {
            transform: translateY(0);
        }
        100% {
            transform: translateY(-50%);
        }
    }

    h2 {
        color: white;
        font-weight: 300;
        margin-bottom: 5px;
        margin-top: 5px;
    }

    main {
        height: 100%;
        display: flex;
        justify-content: center;
    }

    #logo {
        width: 100%;
        margin-bottom: 2em;
        line-height: 30px;
        vertical-align: middle;
        display: inline-block;
    }

    #hero {
        display: flex;
        align-items: start;
        flex-direction: column;
        justify-content: center;
        padding: 16px;
    }

    h1 {
        font-size: 22px;
        margin-top: 0.25em;
        width: 100%;
        text-align: center;
    }

    #links {
        display: flex;
        justify-content: center;
        width: 100%;
        gap: 16px;
        transform: translateY(100%);
    }

    pre {
        font-weight: 300;
        background: linear-gradient(14deg, #d83333 0%, #f041ff 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin: 0;
    }

    p {
        color: #4b5563;
        font-size: 16px;
        line-height: 24px;
        letter-spacing: -0.006em;
        margin: 0;
    }

    code {
        display: inline-block;
        background: linear-gradient(66.77deg, #030409 0%, #030409 100%) padding-box,
        linear-gradient(155deg, #d83333 0%, #f041ff 100%) border-box;
        border-radius: 16px;
        border: 2px solid transparent;
        padding: 0.5ex 1ex;
        margin: 0 0.3em 0 0.3em;
    }

    @media screen and (max-height: 368px) {
        #news {
            display: none;
        }
    }

    @media screen and (max-width: 768px) {
        #container {
            display: flex;
            flex-direction: column;
        }

        #hero {
            display: block;
            padding-top: 10%;
        }

        #links {
            flex-wrap: wrap;
        }

        #links a.button {
            padding: 14px 18px;
        }

        #news {
            right: 16px;
            left: 16px;
            bottom: 2.5rem;
            max-width: 100%;
        }

        h1 {
            line-height: 1.5;
        }
    }
</style>
