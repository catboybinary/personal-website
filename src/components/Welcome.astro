---
import background from '../assets/background.svg';
import Social from "./Social.astro";

let birthDate = new Date(Date.UTC(2006, 4, 4, 21, 0, 0));
let now: Date = new Date();
let ageInMs = now.getTime() - birthDate.getTime();
let ageInYears = ageInMs / (1000 * 60 * 60 * 24 * 365.25);
let age = ageInYears.toFixed(9);

function getAnim() : string {
    let x = Math.random()
    return "animation: "+(1.35+x)+"s ease-in-out infinite alternate anim;"
}
---

<div id="container">
    <img id="background" src={background.src} alt="" fetchpriority="high"/>
    <main>
        <div id="hero">
            <h2>hi, i'm <code style={getAnim()}>
                <pre>catboybinary</pre>
            </code></h2>
            <h2>i am <code style={getAnim()}>
                <pre id="age">{age}</pre>
            </code> years old
            </h2>
            <h2>my pronouns are <code style={getAnim()}>
                <pre class="pronouns"></pre>
            </code></h2>
            <h2>occupations:
                <code style={getAnim()}><pre>java programmer</pre></code><code style={getAnim()}><pre>game developer</pre></code> :3
            </h2>
            <h2 style="text-align: center; margin-top: 32px">my socials</h2>
            <div class="links">
                <Social link="https://twitter.com/catboybinary" colorA="#1c9bf0" colorB="#69deff">twitter</Social>
                <Social link="https://www.twitch.tv/catboybinary" colorA="#9146ff" colorB="#9146ff">twitch</Social>
                <Social link="https://www.youtube.com/@catboybinary" colorA="#ff0033" colorB="#ff296d">youtube</Social>
                <Social link="https://t.me/catboybinary" colorA="#25c6f0" colorB="#1d83cc">telegram</Social>
                <Social link="https://github.com/catboybinary" colorA="#FFFFFF" colorB="#AAAAAA">github</Social>
                <Social link="https://www.curseforge.com/members/catboybinary/projects" colorA="#fd8b38" colorB="#cc2e17">curseforge</Social>
                <Social link="https://modrinth.com/user/catboybinary" colorA="#1ced89" colorB="#14cb47">modrinth</Social>
            </div>
        </div>
    </main>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const pronounsList = ["she/her", "he/him"];
            const pronounsElement = document.querySelector(".pronouns") as HTMLElement;
            const animTime : number = 1.75

            let index: number = 0;
            let birthDate = new Date(Date.UTC(2006, 4, 4, 21, 0, 0));

            function updateLiveAge() {
                let now: Date = new Date();
                let ageInMs = now.getTime() - birthDate.getTime();
                let ageInYears = ageInMs / (1000 * 60 * 60 * 24 * 365.25);
                let ageElement: HTMLElement = document.getElementById("age") as HTMLElement;
                ageElement.textContent = ageInYears.toFixed(9);
            }

            function updatePronoun() {
                const pronounDiv = document.createElement("div");
                pronounDiv.style.webkitTextFillColor = "#e0377b";
                pronounDiv.style.animation = animTime+"s linear slideUp";
                pronounDiv.textContent = pronounsList[index] + "\n"
                    + pronounsList[(index + 1) % pronounsList.length];

                if (pronounsElement.firstChild) {
                    pronounsElement.removeChild(pronounsElement.firstChild);
                }
                pronounsElement.appendChild(pronounDiv);

                index = (index + 1) % pronounsList.length; // Cycle through pronouns
            }

            // Update every 2 seconds (same as CSS animation duration)
            setInterval(updatePronoun, animTime*1000);
            setInterval(updateLiveAge, 1);

            updatePronoun(); // Run initially
            updateLiveAge();
        });
    </script>
</div>

<style>
    #background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        filter: blur(120px);
        user-select: none;
        pointer-events: none;
        opacity: 100%;
    }

    #container {
        min-height: 100vh; /* Use min-height for better content flow */
        background: #0b0a18;
        display: flex;
        flex-direction: column; /* Stack content vertically by default */
        align-items: center; /* Center content horizontally */
        justify-content: center; /* Center content vertically */
        padding: 20px; /* Add some padding around the content */
        box-sizing: border-box; /* Include padding in the element's total width and height */
    }

    .pronouns {
        height: 1em;
        justify-content: center;
        overflow: hidden;
        position: relative;
    }

    @keyframes slideUp {
        0% {
            transform: translateY(0);
        }
        100% {
            transform: translateY(-50%);
        }
    }

    h2 {
        color: white;
        font-weight: 300;
        margin-bottom: 0; /* Adjust margin */
        margin-top: 0; /* Adjust margin */
        font-size: 1.5rem; /* Use relative units for better scaling */
        width: 100%; /* Ensure it respects the max-width on smaller screens */
    }

    main {
        width: 100%; /* Make main take full width */
        display: flex;
        justify-content: center;
        align-items: center; /* Vertically center content within main */
        flex-grow: 1; /* Allow main to grow and take available vertical space */
    }

    #hero {
        display: flex;
        text-align: left;
        align-items: center;
        flex-direction: column;
        justify-content: center;
        padding: 16px;
        max-width: 660px /* Match the max-width of your h2 (or adjust as needed) */
    }

    h1 {
        font-size: 1.5rem; /* Adjust font size */
        margin-top: 0.5em;
        width: 100%;
        text-align: center;
    }

    .links {
        display: flex;
        justify-content: center;
        flex-wrap: wrap; /* Allow links to wrap to the next line on smaller screens */
        gap: 10px; /* Adjust gap */
        max-width: 80%;
        padding: 10px;
        transform: translateY(10px); /* Remove the initial translation */
        background: linear-gradient(66.77deg, #030409 0%, #030409 100%) padding-box,
        linear-gradient(155deg, #d83333 0%, #f041ff 100%) border-box;
        border: solid transparent 2px;
        border-radius: 16px;
    }

    pre {
        font-weight: 300;
        background: linear-gradient(14deg, #d83333 0%, #f041ff 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin: 0;
        font-size: 1.25rem; /* Adjust pre font size */
    }

    p {
        color: #4b5563;
        font-size: 1rem; /* Adjust paragraph font size */
        line-height: 1.5;
        letter-spacing: -0.006em;
        margin: 0;
    }

    code {
        display: inline-block;
        background: linear-gradient(66.77deg, #030409 0%, #030409 100%) padding-box,
        linear-gradient(155deg, #d83333 0%, #f041ff 100%) border-box;
        border-radius: 16px;
        border: 2px solid transparent;
        padding: 0.3em 0.6em; /* Adjust code padding */
        margin: 0.3em; /* Adjust code margin */
        font-size: 1rem; /* Adjust code font size */
    }

    @keyframes anim {
        0% {
            transform: translateY(-1px) rotate(-0.5deg);
        }
        100% {
            transform: translateY(1px) rotate(0.5deg);
        }
    }

    /* Mobile-specific styles */
    @media screen and (max-width: 768px) {
        #container {
            padding: 8px; /* Adjust overall container padding for smaller screens */
        }

        #hero {
            max-width: 95%; /* Match the max-width of your h2 (or adjust as needed) */
        }

        h2 {
            font-size: 1.1rem;
        }

        pre {
            font-size: 1rem; /* Adjust pre font size */
        }

        code {
            padding: 0.2em 0.4em; /* Adjust code padding */
        }

        .links {
            max-width: 100%;
        }

        /* You might want to adjust the font size of the Social component on mobile */
        .gradient-box a {
            font-size: 1rem;
            padding: 8px 16px;
            line-height: 1; /* Adjust line height for better text wrapping */
        }
    }
</style>
