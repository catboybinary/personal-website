---
interface Props {
    link: string;
    colorA: string;
    colorB: string;
}

const hexToRgba = (hex: string, alpha: number): string => {
    let r: number, g: number, b: number;

    r = parseInt(hex.substring(1, 3), 16);
    g = parseInt(hex.substring(3, 5), 16);
    b = parseInt(hex.substring(5, 7), 16);

    return `rgba(${r}, ${g}, ${b}, ${alpha})`;
};

const {link, colorA, colorB} = Astro.props as Props;
const bgColorA = hexToRgba(colorA, 0.1);
const bgColorB = hexToRgba(colorB, 0.1);
---
<div class="gradient-box">
    <a href={link}><slot/></a>
</div>

<style define:vars={{colorA, colorB, bgColorA, bgColorB}}>
    .gradient-box {
        display: inline-block;
        padding: 10px 0;
        border-radius: 10px;
        position: relative;
        background: linear-gradient(to right, var(--bgColorA), var(--bgColorB));
        transition: translate 0.15s ease-in-out;
    }

    .gradient-box::before {
        content: "";
        position: absolute;
        inset: 0;
        padding: 2px; /* Border width */
        border-radius: 10px; /* Match the parent */
        background: linear-gradient(45deg, var(--colorA), var(--colorB));
        -webkit-mask: linear-gradient(45deg, #fff 0 0) content-box, linear-gradient(45deg, #fff 0 0);
        mask: linear-gradient(45deg, #fff 0 0) content-box, linear-gradient(45deg, #fff 0 0);
        -webkit-mask-composite: xor;
        mask-composite: exclude;
        pointer-events: none;
    }

    .gradient-box:hover {
        translate: 0 -3px;
        animation: 1s ease-in-out infinite alternate rotation;
    }

    @keyframes rotation {
        from {
            rotate: -2deg;
        }

        to {
            rotate: 2deg;
        }
    }

    .gradient-box a {
        font-size: 18px;
        font-weight: 350;
        padding: 10px 20px;
        text-decoration: none;
        background: linear-gradient(45deg, var(--colorA), var(--colorB));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        display: inline-block;
        vertical-align: middle;
        line-height: 4px; /* <-- adjust this */
    }
</style>